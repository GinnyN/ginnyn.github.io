{"version":3,"sources":["actions/index.js","reducer/index.js","components/card.js","containers/list.js","components/cart.js","containers/checkout.js","components/navbar.js","App.js","serviceWorker.js","index.js"],"names":["addToItem","amiibo","type","removeItem","initialState","shoppingCart","rootReducer","state","action","temp","filter","item","tail","length","push","total","temp2","edit","parseInt","temp3","temp4","Card","onClick","Media","width","className","src","image","alt","name","Body","character","gameSeries","amiiboSeries","moment","release","jp","format","na","List","dispatch","useDispatch","useState","typeList","setTypeList","gameList","setGameList","amiiboList","setAmiiboList","searchResults","setSearchResults","pages","setPages","current","setCurrent","loading","setLoading","nameFilter","setNameFilter","amiiboFilter","setAmiiboFilter","gameFilter","setGameFilter","dir","variable","sortObj","setSortObj","useEffect","axios","get","then","results","data","Math","ceil","sort","item1","item2","result","valueOf","toUpperCase","getList","Dropdown","Toggle","variant","id","Spinner","as","animation","size","role","aria-hidden","Menu","map","Item","Fragment","InputGroup","Prepend","Text","FormControl","placeholder","aria-label","aria-describedby","onChange","value","target","Container","Row","sm","md","lg","includes","index","Col","addCart","Pagination","Prev","disabled","Next","Cart","onRemove","Button","Checkout","useSelector","NavbarCustom","brand","Navbar","bg","expand","Brand","href","App","show","setShow","to","exact","path","component","Modal","handleClose","Header","closeButton","Title","Footer","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cf85ce52.chunk.js","sourcesContent":["export const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_TO_ITEM = \"ADD_TO_ITEM\";\r\nexport const REMOVE_ITEM = \"REMOVE_ITEM\";\r\nexport const CLEAN_STATE = \"CLEAN_STATE\";\r\n\r\nconst addToCart = (amiibo) => ({ type: ADD_TO_CART, amiibo });\r\nconst addToItem = (amiibo) => ({ type: ADD_TO_ITEM, amiibo });\r\nconst removeItem = (amiibo) => ({ type: REMOVE_ITEM, amiibo });\r\nconst cleanState = () => ({ type: CLEAN_STATE });\r\n\r\nexport { addToCart, addToItem, cleanState, removeItem };","import { ADD_TO_CART, ADD_TO_ITEM, CLEAN_STATE, REMOVE_ITEM } from './../actions';\r\n\r\nconst initialState = {\r\n  shoppingCart: [],\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      const temp = { ...state };\r\n      if (temp.shoppingCart.filter((item) => item.amiibo.tail === action.amiibo.tail).length === 0) {\r\n        temp.shoppingCart.push({ amiibo: action.amiibo, total: 1 });\r\n      } else {\r\n        const amiibo = temp.shoppingCart.filter((item) => item.amiibo.tail === action.amiibo.tail)[0];\r\n        amiibo.total += 1;\r\n      }\r\n      return temp;\r\n    case ADD_TO_ITEM:\r\n      const temp2 = { ...state };\r\n      const item = temp2.shoppingCart.filter((item) => item.amiibo.tail === action.amiibo.amiibo.tail)[0];\r\n      item.total = action.amiibo.edit + parseInt(item.total);\r\n      return temp2;\r\n    case CLEAN_STATE:\r\n      const temp3 = { ...state };\r\n      temp3.shoppingCart = [];\r\n      return temp3;\r\n    case REMOVE_ITEM:\r\n      const temp4 = { ...state };\r\n      temp4.shoppingCart = [ ...state.shoppingCart.filter((item) => item.amiibo.tail !== action.amiibo.amiibo.tail) ];\r\n      return temp4;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport { Media } from 'react-bootstrap';\r\nimport moment from 'moment';\r\n\r\nconst Card = ({ amiibo, onClick }) => (\r\n  <Media>\r\n    <img\r\n      width={64}\r\n      className=\"mr-3\"\r\n      src={amiibo.image}\r\n      alt={amiibo.name}\r\n    />\r\n    <Media.Body>\r\n      <h5>{amiibo.name}</h5>\r\n      <p>Personaje: {amiibo.character}</p>\r\n      <p>Serie de Juegos: {amiibo.gameSeries}</p>\r\n      <p>Colección de Amiibos: {amiibo.amiiboSeries} </p>\r\n      <p>Lanzamiento: (JP) {moment(amiibo.release.jp).format('DD-MM-YYYY')} - (NA) {moment(amiibo.release.na).format('DD-MM-YYYY')}</p>\r\n      <p>\r\n        <button type=\"button\" onClick={onClick}>Agregar</button>\r\n      </p>\r\n    </Media.Body>\r\n  </Media>\r\n);\r\n\r\nexport default Card;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from 'axios';\r\nimport { addToCart } from '../actions';\r\nimport { Container, Row, Col, Dropdown, InputGroup, FormControl, Pagination, Spinner } from 'react-bootstrap';\r\nimport moment from 'moment';\r\n\r\nimport Card from '../components/card';\r\n\r\nimport './style.scss';\r\n\r\nconst List = () => {\r\n  const dispatch = useDispatch();\r\n  const [typeList, setTypeList] = useState([]);\r\n  const [gameList, setGameList] = useState([]);\r\n  const [amiiboList, setAmiiboList] = useState([]);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [pages, setPages] = useState(1);\r\n  const [current, setCurrent] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n  const [amiiboFilter, setAmiiboFilter] = useState(\"\");\r\n  const [gameFilter, setGameFilter] = useState(\"\");\r\n\r\n  const [sortObj, setSortObj] = useState({ dir: false, variable: 'name'});\r\n\r\n  useEffect(() => {\r\n    axios.get('https://www.amiiboapi.com/api/type').then((results) => setTypeList(results.data.amiibo));\r\n    axios.get('https://www.amiiboapi.com/api/gameseries').then((results) => setGameList(results.data.amiibo));\r\n    axios.get('https://www.amiiboapi.com/api/amiiboseries').then((results) => setAmiiboList(results.data.amiibo));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setPages(Math.ceil(searchResults.length / 20));\r\n    setCurrent(1);\r\n  }, [searchResults])\r\n\r\n  useEffect(() => {\r\n    const temp = [ ...searchResults ];\r\n    temp.sort((item1, item2) => {\r\n      let result;\r\n      if(sortObj.variable === 'release')\r\n        result = moment(item1[sortObj.variable].jp).valueOf() > moment(item2[sortObj.variable].jp).valueOf();\r\n      else\r\n        result = item1[sortObj.variable].toUpperCase() > item2[sortObj.variable].toUpperCase();\r\n      if(sortObj.dir)\r\n        return result ? 1 : -1;\r\n      else\r\n        return result ? -1 : 1;\r\n    });\r\n    setSearchResults(temp);\r\n  }, [sortObj]);\r\n\r\n  const getList = (name, variable) => {\r\n    setLoading(true);\r\n    axios.get('https://www.amiiboapi.com/api/amiibo?'+variable+'='+name).then(results => {\r\n      setSearchResults(results.data.amiibo);\r\n      setLoading(false);\r\n    });  \r\n  }\r\n\r\n  const addCart = (item) => dispatch(addToCart(item));\r\n\r\n  const paginationFn = (item, index) => (index <= (20 * current)) && (index >= (20 * (current - 1)));\r\n\r\n  const filter = (item) => {\r\n    if(nameFilter.length > 0 && !item.name.includes(nameFilter)) return false;\r\n    if(gameFilter.length > 0 && !item.gameSeries.includes(gameFilter)) return false;\r\n    if(amiiboFilter.length > 0 && !item.amiiboSeries.includes(amiiboFilter)) return false;\r\n    return true;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n            { typeList.length === 0 && <Spinner\r\n              as=\"span\"\r\n              animation=\"border\"\r\n              size=\"sm\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            /> } Por Tipo\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n          {typeList && typeList.map((item) => \r\n            <Dropdown.Item onClick={() => getList(item.name, 'type')}>\r\n              {item.name}\r\n            </Dropdown.Item>)}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n          { gameList.length === 0 && <Spinner\r\n              as=\"span\"\r\n              animation=\"border\"\r\n              size=\"sm\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            />} Por Serie de Juegos\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n          {gameList && gameList.map((item) => \r\n            <Dropdown.Item onClick={() => getList(item.name, 'gameseries')}>\r\n              {item.name}\r\n            </Dropdown.Item>)}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n          { amiiboList.length === 0 && <Spinner\r\n              as=\"span\"\r\n              animation=\"border\"\r\n              size=\"sm\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            /> } Por Colección de Amiibos\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n          {amiiboList && amiiboList.map((item) => \r\n            <Dropdown.Item onClick={() => getList(item.name, 'amiiboSeries')}>\r\n              {item.name}\r\n            </Dropdown.Item>)}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </nav>\r\n      { loading && <div className=\"pagination\"><Spinner animation=\"grow\" size=\"lg\" /></div> }\r\n      { searchResults.length > 0 && !loading && <React.Fragment>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n            Ordenar por:\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu> \r\n            <Dropdown.Item onClick={() => setSortObj({ dir: false, variable: \"release\" })}>\r\n              Desendiente - Fecha (JP)\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => setSortObj({ dir: true, variable: \"release\" })}>\r\n              Acendente - Fecha (JP)\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => setSortObj({ dir: false, variable: \"name\" })}>\r\n              Desendiente - Nombre\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => setSortObj({ dir: true, variable: \"name\" })}>\r\n              Acendiente - Nombre\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n          <InputGroup className=\"mb-1\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"basic-addon1\">Por Nombre:</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              placeholder=\"Texto\"\r\n              aria-label=\"Nombre\"\r\n              aria-describedby=\"basic-addon1\"\r\n              onChange={(value) => setNameFilter(value.target.value)}\r\n            />\r\n          </InputGroup>\r\n          <InputGroup className=\"mb-1\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"basic-addon1\">Por Juego:</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              placeholder=\"Texto\"\r\n              aria-label=\"Nombre\"\r\n              aria-describedby=\"basic-addon1\"\r\n              onChange={(value) => setGameFilter(value.target.value)}\r\n            />\r\n          </InputGroup>\r\n          <InputGroup className=\"mb-1\">\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"basic-addon1\">Por Serie:</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              placeholder=\"Texto\"\r\n              aria-label=\"Nombre\"\r\n              aria-describedby=\"basic-addon1\"\r\n              onChange={(value) => setAmiiboFilter(value.target.value)}\r\n            />\r\n          </InputGroup>\r\n        </nav>\r\n        <Container>\r\n          <Row sm=\"1\" md=\"3\" lg=\"2\">\r\n            {searchResults && searchResults.filter(filter).filter(paginationFn).map((item) => <Col sm={12} md={6} lg={4}>\r\n              <Card amiibo={item} onClick={() => addCart(item)} />\r\n            </Col>)}\r\n          </Row>\r\n        </Container>\r\n        <div className=\"pagination\">\r\n          <Pagination>\r\n            <Pagination.Prev disabled={current === 1} onClick={() => setCurrent(current - 1)} />\r\n            <Pagination.Next disabled={current === pages} onClick={() => setCurrent(current + 1)} />\r\n          </Pagination>\r\n        </div>\r\n      </React.Fragment> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport { Media, Button, Container } from 'react-bootstrap';\r\n\r\nconst Cart = ({ shoppingCart, onClick, onRemove }) => {\r\n  return <Container>\r\n    {shoppingCart.length === 0 ? <h3> Agregue Contenido al carrito</h3> : shoppingCart.map((item) =>\r\n    <Media>\r\n      <img\r\n        width={64}\r\n        className=\"mr-3\"\r\n        src={item.amiibo.image}\r\n        alt={item.amiibo.name}\r\n      />\r\n      <Media.Body>\r\n        <h5>{item.amiibo.name} | Personaje: {item.amiibo.character}</h5>\r\n        <p> <Button onClick={() => onClick({ amiibo: { tail: item.amiibo.tail }, edit: -1 })}> - </Button> {item.total} <Button onClick={() => onClick({ amiibo: { tail: item.amiibo.tail }, edit: 1 })}> + </Button> \r\n        <Button variant=\"danger\" onClick={() => onRemove({ amiibo: { tail: item.amiibo.tail }, edit: 1 })}> X </Button></p>\r\n      </Media.Body>\r\n    </Media>)}\r\n  </Container>\r\n}\r\n\r\nexport default Cart;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport { addToItem, cleanState, removeItem } from '../actions';\r\nimport Cart from '../components/cart';\r\n\r\nimport './style.scss';\r\n\r\nconst Checkout = () => {\r\n  const dispatch = useDispatch();\r\n  const shoppingCart = useSelector(state => [ ...state.shoppingCart ]);\r\n  return <div>\r\n    <Cart shoppingCart={shoppingCart} onClick={(amiibo) => dispatch(addToItem(amiibo))} onRemove={(amiibo) => dispatch(removeItem(amiibo))} />\r\n    { shoppingCart.length > 0 && <div className=\"flex\">\r\n      <Button variant=\"success\" onClick={() => dispatch(cleanState())}>Comprar</Button>\r\n      <Button variant=\"danger\" onClick={() => dispatch(cleanState())}>Cancelar</Button>\r\n    </div> }\r\n  </div>\r\n}\r\n\r\nexport default Checkout;","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nconst NavbarCustom = ({ brand }) => (\r\n  <Navbar bg=\"light\" expand=\"lg\">\r\n    <Navbar.Brand href=\"#home\">{brand}</Navbar.Brand>\r\n  </Navbar>\r\n)\r\n\r\nexport default NavbarCustom;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { Modal, Button } from 'react-bootstrap';\n\nimport List from './containers/list';\nimport Checkout from './containers/checkout';\nimport NavbarCustom from './components/navbar';\nimport Cart from './components/cart';\nimport { addToItem, removeItem } from './actions';\nimport './App.scss';\n\nfunction App() {\n  const shoppingCart = useSelector(state => [ ...state.shoppingCart ]);\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n\n  return (\n    <Router>\n      <NavbarCustom brand=\"Lista de Amiibos\" />\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div><Link to={'/'} className=\"nav-link\"> List </Link></div>\n        <div><Button variant=\"link\" onClick={() => setShow(true)} >Shopping Cart ({shoppingCart.length})</Button></div>\n        <div>\n          \n        </div>\n      </nav>\n      <hr />\n      <Switch>\n        <Route exact path='/' component={List} />\n        <Route exact path='/cart' component={Checkout} />\n      </Switch>\n      <Modal show={show} handleClose={() => setShow(false)} >\n        <Modal.Header closeButton>\n          <Modal.Title>Shopping Cart</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Cart shoppingCart={shoppingCart} onClick={(amiibo) => dispatch(addToItem(amiibo))} onRemove={(amiibo) => dispatch(removeItem(amiibo))} />\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>Close</Button>\n          <Link to={'/cart'} className=\"link\"> <Button variant=\"primary\" onClick={() => setShow(false)}> Ir a Checkout </Button> </Link>\n        </Modal.Footer>\n      </Modal>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport rootReducer from './reducer/index'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}